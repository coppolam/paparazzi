<!DOCTYPE flight_plan SYSTEM "flight_plan.dtd">

<flight_plan alt="1.0" ground_alt="0" lat0="51.990634" lon0="4.376789" max_dist_from_home="20" name="Rotorcraft Optitrack (Delft)" security_height="0.3">
  <header>
	  #include "autopilot.h"
    #include "guidance/guidance_h.h"
    #include "guidance/guidance_v.h"
    #include "modules/flight_plan_guided/flight_plan_guided.h"
    #include "subsystems/datalink/datalink.h"
	  #include "subsystems/radio_control.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="STDBY" x="0.0" y="0.0"/>
    <waypoint name="p1" x="2.0" y="2.5"/>
    <waypoint name="p2" x="2.0" y="-2.5"/>
    <waypoint name="p3" x="-2.0" y="-2.5"/>
    <waypoint name="p4" x="-2.0" y="2.5"/>
    <!--waypoint lat="51.9906213" lon="4.3768628" name="FA1"/>
    <waypoint lat="51.9905874" lon="4.3767766" name="FA2"/>
    <waypoint lat="51.9906409" lon="4.3767226" name="FA3"/>
    <waypoint lat="51.9906737" lon="4.3768074" name="FA4"/-->
  </waypoints>
  <sectors>
    <sector color="red" name="Flight_Area">
      <corner name="p1"/>
      <corner name="p2"/>
      <corner name="p3"/>
      <corner name="p4"/>
    </sector>
  </sectors>
  
  <exceptions>
    <!--exception cond="datalink_time > 3" deroute="landed"/-->
    <!--exception cond="radio_control.status == RC_REALLY_LOST" deroute="kill"/-->
    <!--exception cond="autopilot.mode == AP_MODE_ATTITUDE_DIRECT" deroute="CL Start"/-->
    <!--exception cond="stateGetPositionEnu_f()->z > 8." deroute="Land here"/-->
  </exceptions>

  <blocks>
    <block name="Geo init">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
      <call_once fun="ResetAlt()"/>
      <while cond="1"/>
    </block>
    <block name="Start Engine">
      <call_once fun="NavResurrect()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>



<!--EKF turning closed loop-->

 <!--start block: hover for 2 sec -->
		<block name="CL Start">
        <call fun="change_h_mode(GUIDANCE_H_MODE_ATTITUDE)"/>
        <call fun="wait_for_mode(GUIDANCE_H_MODE_GUIDED)"/>
        <!--call fun="change_v_mode(GUIDANCE_V_MODE_RC_DIRECT)"/-->
		</block>
		<!--block name="CL forcefield"> 
        <call fun="avoid_wall_and_sides(-0.05)"/>
        <while cond="1"/> 
    </block-->

		<block name="CL Hover">
        <call fun="wait_for_mode(GUIDANCE_H_MODE_GUIDED)"/>
		    <call fun="avoid_wall_and_sides(0.01)"/>
        <exception cond="stage_time>2" deroute="CL Go Forward with forcefield"/>
		</block>

<!--go forward, with a forcefield to prevent collissons -->
		<block name="CL Go Forward with forcefield"> 
        <call fun="avoid_wall_and_sides(0.1)"/>
        <exception cond="distance_thres_logic>distance_stereo" deroute="CL Hover with forcefield"/> <!-- If obstacle is within 1 meter, go to hover -->
    </block>

<!--Hover with a forcefield to prevent collissons -->
		<block name="CL Hover with forcefield">
        <set var="wanted_heading" value="turn_angle"/>
        <call fun="avoid_wall_and_sides(0.01)"/>
        <exception cond="distance_stereo>distance_thres_logic-0.2&&stage_time>hover_wait_sec" deroute="CL Turn"/> <!-- If 2 seconds are passed, go turn -->
    </block>


<!-- turn 60 deg from current heading -->
    <block name = "CL Turn"> 
        <call fun="change_h_mode(GUIDANCE_H_MODE_ATTITUDE)"/>
        <!--set var="wanted_heading" value="stateGetNedToBodyEulers_f()->psi + RadOfDeg(60.0)"/-->
				<call fun="RotateToHeading_ATT(wanted_heading, RadOfDeg(0.0f),RadOfDeg(0.0f),autopilot_in_flight)"/>
		    <while cond="WaitforHeadingCondition(wanted_heading)"/>
        <!--call fun="reset_counter()"/>
        <call fun="wait_counter(30)"/-->
 				<call fun="ResetAngles_ATT(wanted_heading,autopilot_in_flight)"/>
        <call fun="reset_counter()"/>
        <call fun="wait_counter(turn_counter)"/>
        <call fun="change_h_mode(GUIDANCE_H_MODE_GUIDED)"/>
        <exception cond="stage_time>hover_wait_sec" deroute="CL Hover and Check obstacle"/>			<!-- No-->
 		</block>

 <!--check for obstacle -->
    <block name = "CL Hover and Check obstacle"> 
        <call fun="change_h_mode(GUIDANCE_H_MODE_GUIDED)"/>
        <call fun="avoid_wall_and_sides(0.01)"/>
        <exception cond="distance_thres_logic > distance_stereo" deroute="CL Hover with forcefield"/>  <!-- if still obstacle, go to hover->turn again -->
        <exception cond="stage_time>hover_wait_sec" deroute="CL Go Forward with forcefield"/>			<!-- No obstacle, go forward -->
 		</block>

    <block name="landed">
      <call fun="kill_mode()"/>
      <!--call fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/-->
    </block>

    <block name="kill">
      <call_once  fun = "autopilot_set_mode(AP_MODE_KILL)"/>
    </block>
  </blocks>
</flight_plan>
